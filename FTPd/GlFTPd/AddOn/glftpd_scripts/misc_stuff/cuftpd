<!DOCTYPE html>
<html lang="en">
<head>
  <meta id="bb-bootstrap" data-current-user="{&quot;isKbdShortcutsEnabled&quot;: true, &quot;isSshEnabled&quot;: false, &quot;isAuthenticated&quot;: false}"
 />
  <meta name="bb-env" content="production" />
  <script nonce="">

if (window.performance) {

  
  window.performance.okayToSendMetrics = !document.hidden && 'onvisibilitychange' in document;

  if (window.performance.okayToSendMetrics) {

    
    window.addEventListener('visibilitychange', function () {
      if (document.hidden) {
        window.performance.okayToSendMetrics = false;
      }
    });
  }
}
</script>  
  
  
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset="utf-8">
  <title>
  jevring / cuftpd   &mdash; Bitbucket
</title>
  <script nonce="" type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"VwMGVVZSGwIIUFBQDwU="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(20),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,c){try{h?h-=1:o(c||new UncaughtException(t,e,n),!0)}catch(f){try{i("ierr",[f,s.now(),!0])}catch(d){}}return"function"==typeof u&&u.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t,e){var n=e?null:s.now();i("err",[t,n])}var i=t("handle"),a=t(21),c=t("ee"),s=t("loader"),f=t("gos"),u=window.onerror,d=!1,p="nr@seenError",h=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(13),t(12),"addEventListener"in window&&t(6),s.xhrWrappable&&t(14),d=!0)}c.on("fn-start",function(t,e,n){d&&(h+=1)}),c.on("fn-err",function(t,e,n){d&&!n[p]&&(f(n,p,function(){return!0}),this.thrown=!0,o(n))}),c.on("fn-end",function(){d&&!this.thrown&&h>0&&(h-=1)}),c.on("internal-error",function(t){i("ierr",[t,s.now(),!0])})},{}],3:[function(t,e,n){t("loader").features.ins=!0},{}],4:[function(t,e,n){function r(){M++,S=y.hash,this[u]=b.now()}function o(){M--,y.hash!==S&&i(0,!0);var t=b.now();this[l]=~~this[l]+t-this[u],this[d]=t}function i(t,e){E.emit("newURL",[""+y,e])}function a(t,e){t.on(e,function(){this[e]=b.now()})}var c="-start",s="-end",f="-body",u="fn"+c,d="fn"+s,p="cb"+c,h="cb"+s,l="jsTime",m="fetch",v="addEventListener",w=window,y=w.location,b=t("loader");if(w[v]&&b.xhrWrappable){var g=t(10),x=t(11),E=t(8),P=t(6),O=t(13),R=t(7),T=t(14),L=t(9),j=t("ee"),N=j.get("tracer");t(15),b.features.spa=!0;var S,M=0;j.on(u,r),j.on(p,r),j.on(d,o),j.on(h,o),j.buffer([u,d,"xhr-done","xhr-resolved"]),P.buffer([u]),O.buffer(["setTimeout"+s,"clearTimeout"+c,u]),T.buffer([u,"new-xhr","send-xhr"+c]),R.buffer([m+c,m+"-done",m+f+c,m+f+s]),E.buffer(["newURL"]),g.buffer([u]),x.buffer(["propagate",p,h,"executor-err","resolve"+c]),N.buffer([u,"no-"+u]),L.buffer(["new-jsonp","cb-start","jsonp-error","jsonp-end"]),a(T,"send-xhr"+c),a(j,"xhr-resolved"),a(j,"xhr-done"),a(R,m+c),a(R,m+"-done"),a(L,"new-jsonp"),a(L,"jsonp-end"),a(L,"cb-start"),E.on("pushState-end",i),E.on("replaceState-end",i),w[v]("hashchange",i,!0),w[v]("load",i,!0),w[v]("popstate",function(){i(0,M>1)},!0)}},{}],5:[function(t,e,n){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(13),c=t(12),s="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",p="resource",h="-start",l="-end",m="fn"+h,v="fn"+l,w="bstTimer",y="pushState",b=t("loader");b.features.stn=!0,t(8);var g=NREUM.o.EV;o.on(m,function(t,e){var n=t[0];n instanceof g&&(this.bstStart=b.now())}),o.on(v,function(t,e){var n=t[0];n instanceof g&&i("bst",[n,e,this.bstStart,b.now()])}),a.on(m,function(t,e,n){this.bstStart=b.now(),this.bstType=n}),a.on(v,function(t,e){i(w,[e,this.bstStart,b.now(),this.bstType])}),c.on(m,function(){this.bstStart=b.now()}),c.on(v,function(t,e){i(w,[e,this.bstStart,b.now(),"requestAnimationFrame"])}),o.on(y+h,function(t){this.time=b.now(),this.startPath=location.pathname+location.hash}),o.on(y+l,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+s]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(p)]),window.performance["c"+s]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(p)]),window.performance["webkitC"+s]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],6:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(23)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],7:[function(t,e,n){function r(t,e,n){var r=t[e];"function"==typeof r&&(t[e]=function(){var t=r.apply(this,arguments);return o.emit(n+"start",arguments,t),t.then(function(e){return o.emit(n+"end",[null,e],t),e},function(e){throw o.emit(n+"end",[e],t),e})})}var o=t("ee").get("fetch"),i=t(20);e.exports=o;var a=window,c="fetch-",s=c+"body-",f=["arrayBuffer","blob","json","text","formData"],u=a.Request,d=a.Response,p=a.fetch,h="prototype";u&&d&&p&&(i(f,function(t,e){r(u[h],e,s),r(d[h],e,s)}),r(a,"fetch",c),o.on(c+"end",function(t,e){var n=this;e?e.clone().arrayBuffer().then(function(t){n.rxSize=t.byteLength,o.emit(c+"done",[null,e],n)}):o.emit(c+"done",[t],n)}))},{}],8:[function(t,e,n){var r=t("ee").get("history"),o=t(23)(r);e.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],9:[function(t,e,n){function r(t){function e(){s.emit("jsonp-end",[],p),t.removeEventListener("load",e,!1),t.removeEventListener("error",n,!1)}function n(){s.emit("jsonp-error",[],p),s.emit("jsonp-end",[],p),t.removeEventListener("load",e,!1),t.removeEventListener("error",n,!1)}var r=t&&"string"==typeof t.nodeName&&"script"===t.nodeName.toLowerCase();if(r){var o="function"==typeof t.addEventListener;if(o){var a=i(t.src);if(a){var u=c(a),d="function"==typeof u.parent[u.key];if(d){var p={};f.inPlace(u.parent,[u.key],"cb-",p),t.addEventListener("load",e,!1),t.addEventListener("error",n,!1),s.emit("new-jsonp",[t.src],p)}}}}}function o(){return"addEventListener"in window}function i(t){var e=t.match(u);return e?e[1]:null}function a(t,e){var n=t.match(p),r=n[1],o=n[3];return o?a(o,e[r]):e[r]}function c(t){var e=t.match(d);return e&&e.length>=3?{key:e[2],parent:a(e[1],window)}:{key:t,parent:window}}var s=t("ee").get("jsonp"),f=t(23)(s);if(e.exports=s,o()){var u=/[?&](?:callback|cb)=([^&#]+)/,d=/(.*)\.([^.]+)/,p=/^(\w+)(\.|$)(.*)$/,h=["appendChild","insertBefore","replaceChild"];f.inPlace(HTMLElement.prototype,h,"dom-"),f.inPlace(HTMLHeadElement.prototype,h,"dom-"),f.inPlace(HTMLBodyElement.prototype,h,"dom-"),s.on("dom-start",function(t){r(t[0])})}},{}],10:[function(t,e,n){var r=t("ee").get("mutation"),o=t(23)(r),i=NREUM.o.MO;e.exports=r,i&&(window.MutationObserver=function(t){return this instanceof i?new i(o(t,"fn-")):i.apply(this,arguments)},MutationObserver.prototype=i.prototype)},{}],11:[function(t,e,n){function r(t){var e=a.context(),n=c(t,"executor-",e),r=new f(n);return a.context(r).getCtx=function(){return e},a.emit("new-promise",[r,e],e),r}function o(t,e){return e}var i=t(23),a=t("ee").get("promise"),c=i(a),s=t(20),f=NREUM.o.PR;e.exports=a,f&&(window.Promise=r,["all","race"].forEach(function(t){var e=f[t];f[t]=function(n){function r(t){return function(){a.emit("propagate",[null,!o],i),o=o||!t}}var o=!1;s(n,function(e,n){Promise.resolve(n).then(r("all"===t),r(!1))});var i=e.apply(f,arguments),c=f.resolve(i);return c}}),["resolve","reject"].forEach(function(t){var e=f[t];f[t]=function(t){var n=e.apply(f,arguments);return t!==n&&a.emit("propagate",[t,!0],n),n}}),f.prototype["catch"]=function(t){return this.then(null,t)},f.prototype=Object.create(f.prototype,{constructor:{value:r}}),s(Object.getOwnPropertyNames(f),function(t,e){try{r[e]=f[e]}catch(n){}}),a.on("executor-start",function(t){t[0]=c(t[0],"resolve-",this),t[1]=c(t[1],"resolve-",this)}),a.on("executor-err",function(t,e,n){t[1](n)}),c.inPlace(f.prototype,["then"],"then-",o),a.on("then-start",function(t,e){this.promise=e,t[0]=c(t[0],"cb-",this),t[1]=c(t[1],"cb-",this)}),a.on("then-end",function(t,e,n){this.nextPromise=n;var r=this.promise;a.emit("propagate",[r,!0],n)}),a.on("cb-end",function(t,e,n){a.emit("propagate",[n,!0],this.nextPromise)}),a.on("propagate",function(t,e,n){this.getCtx&&!e||(this.getCtx=function(){if(t instanceof Promise)var e=a.context(t);return e&&e.getCtx?e.getCtx():this})}),r.toString=function(){return""+f})},{}],12:[function(t,e,n){var r=t("ee").get("raf"),o=t(23)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],13:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(23)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],14:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",c)}function i(t){b.push(t),l&&(x?x.then(a):v?v(a):(E=-E,P.data=E))}function a(){for(var t=0;t<b.length;t++)r([],b[t]);b.length&&(b=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(6);var f=t("ee"),u=f.get("xhr"),d=t(23)(u),p=NREUM.o,h=p.XHR,l=p.MO,m=p.PR,v=p.SI,w="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],b=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new h(t);try{u.emit("new-xhr",[e],e),e.addEventListener(w,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(h,g),g.prototype=h.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),l){var x=m&&m.resolve();if(!v&&!m){var E=1,P=document.createTextNode(E);new l(a).observe(P,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===w||a()})},{}],15:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=a.now()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var s=t.getResponseHeader("X-NewRelic-App-Data");s&&(e.cat=s.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return l(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(16),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,p=t("id"),h=t(19),l=t(18),m=window.XMLHttpRequest;a.features.xhr=!0,t(14),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,h&&(h>34||h<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=l(r);i&&(n.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var c=0;c<d;c++)e.addEventListener(u[c],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+p(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+p(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,e],e)})}},{}],16:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],17:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[f.now()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(20),c=t(21),s=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],p="api-",h=p+"ixn-";a(d,function(t,e){u[e]=o(p+e,!0,"api")}),u.addPageAction=o(p+"addPageAction",!0),u.setCurrentRouteName=o(p+"routeName",!0),e.exports=newrelic,u.interaction=function(){return(new r).get()};var l=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(h+"tracer",[f.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[f.now(),r,o],n),o)try{return e.apply(this,arguments)}catch(t){throw s.emit("fn-err",[arguments,this,t],n),t}finally{s.emit("fn-end",[f.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){l[e]=o(h+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],18:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],19:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],20:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],21:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],22:[function(t,e,n){e.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],23:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(21),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){p([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o,e)}catch(a){p([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){p([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function p(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o,i){if(!p.aborted||i){t&&t(n,r,o);for(var a=e(o),c=l(n),s=c.length,f=0;f<s;f++)c[f].apply(a,r);var d=u[y[n]];return d&&d.push([b,n,r,a]),a}}function h(t,e){w[t]=l(t).concat(e)}function l(t){return w[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",y[n]=e,e in u||(u[e]=[])})}var w={},y={},b={on:h,emit:n,get:m,listeners:l,context:e,buffer:v,abort:a,aborted:!1};return b}function i(){return new r}function a(){(u.api||u.feature)&&(p.aborted=!0,u=p.backlog={})}var c="nr@context",s=t("gos"),f=t(20),u={},d={},p=e.exports=o();p.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!x++){var t=g.info=NREUM.info,e=p.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return u.abort();f(y,function(e,n){t[e]||(t[e]=n)}),s("mark",["onload",a()+g.offset],null,"api");var n=p.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===p.readyState&&i()}function i(){s("mark",["domContent",a()+g.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(c=Math.max((new Date).getTime(),c))-g.offset}var c=(new Date).getTime(),s=t("handle"),f=t(20),u=t("ee"),d=window,p=d.document,h="addEventListener",l="attachEvent",m=d.XMLHttpRequest,v=m&&m.prototype;NREUM.o={ST:setTimeout,SI:d.setImmediate,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var w=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-spa-1071.min.js"},b=m&&v&&v[h]&&!/CriOS/.test(navigator.userAgent),g=e.exports={offset:c,now:a,origin:w,features:{},xhrWrappable:b};t(17),p[h]?(p[h]("DOMContentLoaded",i,!1),d[h]("load",r,!1)):(p[l]("onreadystatechange",o),d[l]("onload",r)),s("mark",["firstbyte",c],null,"api");var x=0,E=t(22)},{}]},{},["loader",2,15,5,3,4]);</script>
  


<meta id="bb-canon-url" name="bb-canon-url" content="https://bitbucket.org">
<meta name="bb-api-canon-url" content="https://api.bitbucket.org">


<meta name="bb-commit-hash" content="13e9ac7a8b26">
<meta name="bb-app-node" content="app-169">
<meta name="bb-view-name" content="bitbucket.apps.repo2.views.landing">
<meta name="ignore-whitespace" content="False">
<meta name="tab-size" content="None">
<meta name="locale" content="en">
<meta name="application-name" content="Bitbucket">
<meta name="apple-mobile-web-app-title" content="Bitbucket">
<meta name="slack-app-id" content="A8W8QLZD1">


<meta name="theme-color" content="#0049B0">
<meta name="msapplication-TileColor" content="#0052CC">
<meta name="msapplication-TileImage" content="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/logos/bitbucket/mstile-150x150.png">
<link rel="apple-touch-icon" sizes="180x180" type="image/png" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/logos/bitbucket/apple-touch-icon.png">
<link rel="icon" sizes="192x192" type="image/png" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/logos/bitbucket/android-chrome-192x192.png">

<link rel="icon" sizes="16x16 24x24 32x32 64x64" type="image/x-icon" href="/favicon.ico?v=2">
<link rel="mask-icon" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/logos/bitbucket/safari-pinned-tab.svg" color="#0052CC">

<link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="Bitbucket">

  <meta name="description" content="
  
    cuftpd is an ftp-server written in Java.
  
">
  
  
    
  



  <link rel="stylesheet" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/css/entry/vendor.css" />
<link rel="stylesheet" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/css/entry/app.css" />



  <link rel="stylesheet" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/css/entry/adg3-skeleton-nav.css">
  <link rel="stylesheet" href="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/css/entry/adg3.css">
  
  <script nonce="">
  window.__sentry__ = {"dsn": "https://ea49358f525d4019945839a3d7a8292a@sentry.io/159509", "release": "13e9ac7a8b26 (canary)", "tags": {"project": "bitbucket-core"}, "environment": "canary"};
</script>
<script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/dist/webpack/sentry.js" nonce=""></script>
  <script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/dist/webpack/early.js" nonce=""></script>
  
  
  
  
    <link href="/jevring/cuftpd/rss" rel="alternate nofollow" type="application/rss+xml" title="RSS feed for cuftpd" />

  <meta name="twitter:card" content="summary"/>
  <meta name="twitter:site" content="@bitbucket"/>
  <meta name="og:type" content="bitbucket:hgrepository"/>
  <meta name="og:title" content="jevring / cuftpd"/>
  <meta name="og:url" content="https://bitbucket.org/jevring/cuftpd"/>
  
    <meta name="og:description" content="cuftpd is an ftp-server written in Java."/>
  
  
    <meta name="og:image" content="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/repo-avatars/java.png"/>

</head>
<body class="production adg3 "
    data-static-url="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/"
data-base-url="https://bitbucket.org"
data-no-avatar-image="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/img/default_avatar/user_blue.svg"
data-current-user="{&quot;isKbdShortcutsEnabled&quot;: true, &quot;isSshEnabled&quot;: false, &quot;isAuthenticated&quot;: false}"
data-atlassian-id="{&quot;loginStatusUrl&quot;: &quot;https://id.atlassian.com/profile/rest/profile&quot;}"
data-settings="{&quot;MENTIONS_MIN_QUERY_LENGTH&quot;: 3}"

data-current-repo="{&quot;scm&quot;: &quot;hg&quot;, &quot;readOnly&quot;: false, &quot;owner&quot;: {&quot;username&quot;: &quot;jevring&quot;, &quot;uuid&quot;: &quot;1425f39d-0876-44f3-a3c3-010056e77a20&quot;, &quot;isTeam&quot;: false}, &quot;slug&quot;: &quot;cuftpd&quot;, &quot;fullslug&quot;: &quot;jevring/cuftpd&quot;, &quot;uuid&quot;: &quot;0264036a-a223-4832-bcee-1ca2f5a18307&quot;, &quot;language&quot;: &quot;java&quot;, &quot;id&quot;: 503786, &quot;analyticsKey&quot;: &quot;UA-2424157-4&quot;, &quot;mainbranch&quot;: {&quot;name&quot;: &quot;default&quot;}, &quot;pygmentsLanguage&quot;: &quot;java&quot;}"







data-browser-monitoring="true"
data-switch-create-pullrequest-commit-status="true"

data-track-js-errors="true"


>
<div
  id="page"
  data-mobile-nav
>
  
    <div id="adg3-navigation"
  
  
  
   data-mobile-nav
  >
  <nav class="skeleton-nav">
    <div class="skeleton-nav--left">
      <div class="skeleton-nav--left-top">
        <ul class="skeleton-nav--items">
          <li></li>
          <li></li>
          <li></li>
          <li class="skeleton--icon"></li>
          <li class="skeleton--icon-sub"></li>
          <li class="skeleton--icon-sub"></li>
          <li class="skeleton--icon-sub"></li>
          <li class="skeleton--icon-sub"></li>
          <li class="skeleton--icon-sub"></li>
          <li class="skeleton--icon-sub"></li>
        </ul>
      </div>
      <div class="skeleton-nav--left-bottom">
        <div class="skeleton-nav--left-bottom-wrapper">
          <div class="skeleton-nav--item-help"></div>
          <div class="skeleton-nav--item-profile"></div>
        </div>
      </div>
    </div>
    <div class="skeleton-nav--right">
      <ul class="skeleton-nav--items-wide">
        <li class="skeleton--icon-logo-container">
          <div class="skeleton--icon-container"></div>
          <div class="skeleton--icon-description"></div>
          <div class="skeleton--icon-logo"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
        <li>
          <div class="skeleton--icon-small"></div>
          <div class="skeleton-nav--item-wide-content"></div>
        </li>
      </ul>
    </div>
  </nav>
</div>

    <div id="wrapper">
      
  


      
  <div id="nps-survey-container"></div>

 

      
  

<div id="account-warning" data-module="header/account-warning"
  data-unconfirmed-addresses="false"
  data-no-addresses="false"
  
></div>



      
  
<header id="aui-message-bar">
  
</header>


      <div id="content" role="main">

        
          <header class="app-header">
            <div class="app-header--primary">
              
                <div class="app-header--context">
                  <div class="app-header--breadcrumbs">
                    
  <ol class="aui-nav aui-nav-breadcrumbs">
    <li>
  <a href="/jevring/">jevring</a>
</li>

<li>
  <a href="/jevring/cuftpd">cuftpd</a>
</li>
    
  </ol>

                  </div>
                  <h1 class="app-header--heading">
                    Overview
                  </h1>
                </div>
              
            </div>

            <div class="app-header--secondary">
              
                
              
            </div>
          </header>
        

        
        
  <div class="aui-page-panel ">
    <div class="hidden">
  
  
  </div>
    <div class="aui-page-panel-inner">

      <div
        id="repo-content"
        class="aui-page-panel-content forks-enabled"
        data-module="repo/index"
        
      >
        
  

        
  <div id="repo-overview"
      data-module="repo/overview/index"
      data-admin-url="/jevring/cuftpd/admin/hipchat-integration">
  
  
    <div class="repository-overview-main">
      <div class="page-actions--primary">
        <div class="aui-buttons" id="repo-clone-sourcetree">
  <button class="aui-button" id="repo-clone-sourcetree-trigger"
    data-module="repo/overview/sourcetree-dialog"
    title="Clone in Sourcetree">
    <span class="aui-icon aui-icon-small aui-iconfont-devtools-clone">Clone in Sourcetree</span>
  </button>
</div>
<div id="repo-clone-sourcetree-dialog" class="hidden">
  
  <div class="sourcetree-callout clone-in-sourcetree"
  data-module="components/clone/clone-in-sourcetree"
  data-https-url="https://bitbucket.org/jevring/cuftpd"
  data-ssh-url="ssh://hg@bitbucket.org/jevring/cuftpd">

  <div>
    <button class="aui-button aui-button-primary">
      
        Clone in Sourcetree
      
    </button>
  </div>

  <p class="windows-text">
    
      <a href="http://www.sourcetreeapp.com/?utm_source=internal&amp;utm_medium=link&amp;utm_campaign=clone_repo_win" target="_blank">Atlassian Sourcetree</a>
      is a free Git and Mercurial client for Windows.
    
  </p>
  <p class="mac-text">
    
      <a href="http://www.sourcetreeapp.com/?utm_source=internal&amp;utm_medium=link&amp;utm_campaign=clone_repo_mac" target="_blank">Atlassian Sourcetree</a>
      is a free Git and Mercurial client for Mac.
    
  </p>
</div>
</div>
        





  

<div class="clone-url" data-module="components/clone/url-dropdown" data-owner="1425f39d-0876-44f3-a3c3-010056e77a20"
     data-location-context="overview"
     data-fetch-url="https://bitbucket.org/jevring/cuftpd"
     data-push-url="https://bitbucket.org/jevring/cuftpd"
     
      data-preselect-preferred-upstream="true"
      data-urlonly="true"
     >
  <div class="aui-buttons">
    
    <button class="aui-button aui-dropdown2-trigger protocol-trigger"
            data-command-prefix="hg clone"
            data-primary-https="https://bitbucket.org/jevring/cuftpd"
            data-primary-ssh="ssh://hg@bitbucket.org/jevring/cuftpd"
            aria-controls="protocols-list-overview">
      <span class="dropdown-text">HTTPS</span>
    </button>
    <aui-dropdown-menu id="protocols-list-overview" data-aui-alignment="bottom left">
      <aui-section id="protocols-list-section" class="aui-list-truncate">
        <aui-item-radio class="item-link https" checked>HTTPS</aui-item-radio>
        <aui-item-radio class="item-link ssh">SSH</aui-item-radio>
      </aui-section>
    </aui-dropdown-menu>
    <input type="text" readonly="readonly" class="clone-url-input"
           value="https://bitbucket.org/jevring/cuftpd">
  </div>
  
</div>

      </div>

      <div class="repo-info">
        <div id="repo-metadata" class="repo-metadata">
          <div class="metadata-labels-column">
            <div class="metadata-label">
              Last updated
            </div>
            
            
            
              <div class="metadata-label">
                Language
              </div>
            
            <div class="metadata-label">
              Access level
            </div>
          </div>

          <div class="metadata-contents-column">
            <div class="metadata-content">
              
              <time datetime="2015-01-23T17:32:24.915122">2015-01-23</time>
            </div>
            
            
            
              <div class="metadata-content">
                Java
              </div>
            
            <div class="metadata-content">
              
              
              
                <span title="You have read access">Read</span>
              
            </div>
          </div>
        </div>
        <div class="repo-stats" id="repo-stats" data-module="repo/overview/repo-stats" >
          
          
          
          
          
    
    
  
          
    
    
  

          <div class="repo-stats-column">
            <div class="repo-stats-item">
              <a id ="pull-requests-repo-stats"
                 href="/jevring/cuftpd/pull-requests/"
                 title="View open pull requests for this repository">
                <div class="stat-value">0</div>
                <div class="stat-label">
                  
                    Open PRs
                  
                </div>
              </a>
            </div>
            <hr>
            <div class="repo-stats-item">
              <a id="branches-repo-stats"
                 href="/jevring/cuftpd/branches/"
                 title="View branches for this repository">
                <div class="stat-value">1</div>
                <div class="stat-label">
                  
                    Branch
                  
                </div>
              </a>
            </div>
          </div>

          <div class="repo-stats-column">
            <div class="repo-stats-item">
              <a href="#followers" id="followers-dialog-trigger"
                data-module="repo/overview/followers-dialog"
                title="View watchers of this repository"
                data-url="/api/1.0/repositories/jevring/cuftpd/followers"
                data-template="watchers-overview-template">
                <div class="stat-value">5</div>
                <div class="stat-label">
                  
                    Watchers
                  
                </div>
              </a>
            </div>
            <hr>
            <div class="repo-stats-item">
              <a href="#forks" id="forks-dialog-trigger"
                data-module="repo/overview/filterable-list-dialog"
                title="View forks of this repository"
                data-url="/api/1.0/repositories/jevring/cuftpd/forks"
                data-template="forks-overview-template">
                <div class="stat-value">1</div>
                <div class="stat-label">
                  
                    Fork
                  
                </div>
              </a>
            </div>
          </div>
        </div>
      </div>
      
      
      
        <div id="readme" class="maskable">
          
            
            <div class="readme file wiki-content" >
              
              <pre class="plaintext">--- How to install cuftpd ---

- unpack to a suitable location
- install the Java JDK (if you haven&#39;t already)
- create your certificates (how varies depending on if you are going to use a local or remote synchronous userbase)
- configure (&quot;Configure cuftpd&quot;)
- OPTIONAL: Set up a remote userbase.
- run (&quot;Running cuftpd (with a remote userbase)&quot;)

--- Installing Java ---
 - REQUIRES java 7 (1.7)!
    - the JDK is preferred to the JRE, as the &quot;-server&quot; flag can increase performance, but technically only the JRE is necessary
    - the JDK can be downloaded from www.java.com or java.sun.com
 cuftpd only officially supports Sun&#39;s java (but it might work with other JDKs as well, such as the OpenJDK). 
 Sun has simple java installation files for Windows, Linux and Solaris.
 Both 32 and 64 bit versions in most cases.
 Sun doesn&#39;t have a simple solution for java on FreeBSD (or any other BSD), but you can still install java on *BSD.
 One resource for this, and google has more, is: http://www.eyesbeyond.com/freebsddom/java/jdk16.html

--- Getting help ---

 Try the &quot;site help&quot; or &quot;site help $command&quot; commands when logged on to the ftpd.

--- Configure cuftpd ---

- edit &#39;data/cuftpd.xml&#39; to reflect the settings you want
- edit &#39;data/permissions.acl&#39; to reflect the permissions you want (information provided in the file)
- after this, all the configuration is done online via &quot;site&quot;-commands.
NOTE: While the configuration files regarding users and such CAN be edited by hand, it should not be done while the server
is online. This is because the server keeps copies of its data in memory, and will therefore overwrite any changes to
the userfiles upon each save.

--- Running cuftpd ---

#java [-server] -jar cuftpd-$VERSION.jar
The &quot;-server&quot; is optional. It can improve performance in some cases. It affects the policies regarding memory, mostly.
The &quot;-server&quot; switch is only available if you have the full JDK, not when you run just the JRE.

When you see &quot;cuftpd $VERSION online&quot;, where $VERSION is the version you are currently running, cuftpd is online.
cuftpd will NOT fork into the background, so you need to do that yourself in an appropriate manner.

--- NEW - Running cuftpd with an ASYNCHRONOUS remove userbase ---
This is a new cuftpd feature in 1.5. The asynchronous userbase lets your cuftpd instance operate as if it were local,
and simply update its peers asynchronously in the background. This works even if one of the peers goes offline for
a time, provided if was configured as a peer. Simply choose authentication type 4, and configure your peers (other cuftpd
instances) in cuftpd.xml and you are good to go.
IMPORTANT: You must ensure that no loops are set up in the peer structure. Having a tree-like structure is fine. Circles are not.

If you are just starting out with empty userbases for all peers, simply connecting them via peer configuration as specified above.
If, however, you already have a userbase one a peer, or perhaps you want to add a new peer to an existing network of peers, then
you must do the following: Shut down one of the running peers that you intend to connect the new peer to. Make a copy of the stopped
peer&#39;s userbase, and copy it to the new peer. Then start them back up. This should provide them both with a common sync point.
It is important that you copy the userbase BEFORE you start them up as peers for the first time, because otherwise any pending
changes will be in the queue, and will cause inconsistencies.
&quot;But what if I don&#39;t want to shut down my running hosts?&quot;, you ask. Well, you have to, to add a peer, because every peer-relationship
is two-sided, so you have to restart one of the peers anyway, after having changed its configuration, so there is little you can do.
In the future, it will perhaps be possible to forgo this manual step, but for now, it is necessary.

--- Running cuftpd with a remote synchronous userbase ---

- create certificates for the userbase and the clients. See the &quot;Setting up your certificates&quot;-section

- on the machine running the userbase: (this is ONLY done on ONE machine)
    - copy the server.keystore file to an appropriate location
    - edit &#39;data/userbase.conf&#39; to indicate data directory and ssl-values (and some of the other stuff, if you feel like it)
    - NOTE: this machine does NOT use cuftpd.xml, ONLY userbase.conf
    - start by executing &#39;java -cp cuftpd-$version.jar cu.ftpd.user.userbases.remote.server.RmiDelegateUserbaseServer&quot;

- on the machine(s) running the ftpd: (this is done on all the other machines)
    - change the values in &#39;data/cuftpd.xml&#39; for /ftpd/user/authentication/type and /ftpd/user/statistics/type to 2.
        - Note: you can run statistics locally or remotely, but only remotely if the userbase is also run remotely.
    - set the values for certificates and certificate password in the /ftpd/ssl section of &#39;data/cuftpd.xml&#39;
    - NOTE: this machine does NOT use userbase.conf, ONLY cuftpd.xml
    - run (See &quot;How to run cuftpd&quot;)

NOTE: You will need to have cuftpd.jar in the same directory as userbase.jar
If you&#39;re having trouble connecting to the remote userbase, try adding -Djava.rmi.server.hostname=IP to the command line
of the host running the userbase, i.e. &quot;java -Djava.rmi.server.hostname=IP -jar userbase.jar&quot;, where IP is the IP of
the host running the userbase

--- A note on certificates ---

The certificates created by the methods below will have a default expiration time of 90 days. This can be altered by
using different command line switches. I would suggest using more or less &quot;real&quot; values for the dname, such as
maybe a hostname for the CN, or a correct IP. This will help you identify and keep track of the certificates
when you start juggling more than one set.
Using correct information might also prevent dialog boxes from popping up for ftp client users if the CN matches
the hostname in question.

--- Setting up your certificates for a local userbase installation ---

This is quite simple. It uses only one step from the section below, namely:
#keytool -genkey -v -keyalg RSA -keystore client.keystore -dname &quot;CN=Client, OU=Bar, O=Foo, L=Some, ST=Where, C=UN&quot;

Executing this will create a keystore that can be used by cuftpd.

--- Setting up your certificates for a remote synchronous (rmi) userbase and the servers connecting to it ---

Most of this information is taken from the &quot;Key Management&quot; section of http://www.cs.columbia.edu/~akonstan/rmi-ssl/
It does a good job of detailing what needs to be done.
The &quot;server&quot; parts refer to the remote userbase, and the &quot;client&quot; parts refer to computer running the ftpd.
The command can all be executed on the same machine, and then the &quot;server.keystore&quot; file can be moved
to the computer running the remote userbase.
When executing these commands, you will be asked to supply a password. Both when creating the keystores and when adding
the public keys to them.

1.  Create a self-signed server and a self-signed client key each in its own keystore
    keytool -genkey -v -keyalg RSA -keystore server.keystore -dname &quot;CN=Server, OU=Bar, O=Foo, L=Some, ST=Where, C=UN&quot;
    keytool -genkey -v -keyalg RSA -keystore client.keystore -dname &quot;CN=Client, OU=Bar, O=Foo, L=Some, ST=Where, C=UN&quot;

2. Export the server&#39;s and the client&#39;s public keys from their respective keystores
    keytool -export -rfc -keystore server.keystore -alias mykey -file server.public-key
    keytool -export -rfc -keystore client.keystore -alias mykey -file client.public-key

3. Import the client&#39;s public key to the server&#39;s keystore, and vice-versa:
    keytool -import -alias client -keystore server.keystore -file client.public-key
    keytool -import -alias server -keystore client.keystore -file server.public-key
(Answer &quot;yes&quot; when asked if you want to import)

When adding more servers to the set of hosts connecting to the remote userbase, you will repeat all but the first command.
This ensures that all your clients will trust the remote userbase, and that the remote userbase knows which clients to trust.
Clients without this dual trust will not be allowed to connect to the remote userbase.

When adding more servers, create the client keystore, extract the client public key (all as above), then copy the public
key to the computer running the remote userbase, and use the method above to import it to the server.keystore.

Normally the remote userbase will use &quot;server.keystore&quot; as both keystore and truststore, however it is possible to use
a different file as a truststore, thus the different settings in userbase.conf.
A similar situation exists for the clients (cuftpd server instances).

NOTE: The server.keystore file is ONLY CREATED ONCE and then you ADD public keys from cuftpd servers to it.
The client.keystore file is created FOR EACH SERVER, and then you ADD the REMOTE USERBASE PUBLIC KEY to client.keystore

--- Using sitebots with cuftpd ---

This really depends on your sitebot, but if you choose to use the internal zipscript in cuftpd, the race log can be found in data/logs/cuftpd.log
It is also possible to use external zipscripts with cuftpd. Currently only pzs-ng is supported. To use pzs-ng, edit the /ftpd/site/zipscript section
in cuftpd.xml appropriately.

--- Configuring external zipscripts (pzs-ng only, currently) ---

Read the information in: http://svn.pzs-ng.com/project-zs-ng/trunk/INSTALL.cuftpd

If any problems arise, talk to the nice people in #pzs-ng on EFNet

--- Getting transfer statistics in cuftpd ---

This is done by a set of site-commands. Each section configured in cuftpd.xml tracks a separate set of statistics.
The statistics for all sections combined (and directories that are &quot;sectionless&quot;, such as &quot;/&quot; by default) are collected
in the &quot;default&quot; section.
These transfer statistics can be viewed via the following site commands: allup, alldn, mnup, mndn, wkup, wkdn, dayup, daydn
They represent all, month, week and day uploads and downloads, respectively.
To get statistics based groups, just prefix each command with &quot;gp&quot;, as in gpallup or gpwkdn.
To get more information about these commands, view the site help for each command.

--- How does the userbase work? ---

As was made clear earlier in this document, cuftpd supports two types of userbases (three if you count the anonymous one).
One is remote, and the other one is local. They both work in the same manner though, transparently to the user.
The user information is kept on files on disk. The information in these files is mirrored in memory in cuftpd, so making
changes to the userfiles while cuftpd is running will NOT change the user information (which is true for most files
internal to cuftpd).
In the case of a local userbase, these files are kept on the computer running the ftpd. In the case of the remote userbase,
these files are kept on the computer running the remote userbase, and served up to the computers running the ftpd via
RMI secured by SSL and implementing certificate validation for both server and client. This certificate validation prevents
rogue implementations from connecting to your userbase.

cuftpd comes with a default user, aptly named &quot;cuftpd&quot;, with the password &quot;cuftpd&quot;. This user can, by default, only log
in from localhost. Users are added, deleted and modified online via site-commands.
To find more information about these commands, request site help for: adduser, gadduser, deluser.
Users can be suspended and unsuspended. A suspended user still retains his/her account, but is unable to log in.
Users can be suspended via the site-command &quot;change&quot;. This command can also set other properties for a user.
This command is reserved for administrators only. If a user wants to change his/her details, there are some convenience
functions to do this, such as &quot;site passwd&quot; and &quot;site tagline&quot;.

Users can be allowed to download without using up any credits. This is called &quot;leech&quot;.
Users can be allotted a certain amount of credits on a weekly basis. This is called &quot;allotment&quot;.
Both &quot;leech&quot; and &quot;allotment&quot; settings are accessible via the &quot;site change&quot; command.

User with &quot;leech&quot; and &quot;allotment&quot; can be viewed via the &quot;site leechers&quot; and &quot;site allotments&quot; commands.
I recommend viewing the help for these commands, as well as the &quot;change&quot; command.

--- Configuring permissions in cuftpd ---

Some commands in cuftpd requires that the user have certain permissions. These are different from the permissions
in data/permissions.acl, in that they are not path bound, and are connected to the userfile itself.
When requesting help for a certain command, it will say if any permission is required, and if so, which.
These permissions will be described with names. These names can be resolved to numbers by executing &quot;site permissions&quot;.
When granting or removing a permission from a user, use the commands &quot;site addpermissions&quot; and &quot;site delpermissions&quot;.
These commands take as parameters the user in question, and the permissions to be added or removed.
Permissions can either be a sole number, or a comma-separated list of numbers, such as: 1,2,3,4,5,6,7
To see a user&#39;s permission, execute &quot;site user username&quot;.

Note: the permissions contained in the &#39;data/permissions.acl&#39; file are reloaded each time someone logs in, so there is
no need to restart the server just because the permissions changed.

--- Note on IPv6 ---

Because java supports IPv6 out-of-the-box, cuftpd supports IPv6 if the underlying operating system supports IPv6.
Currently most major operating systems have default or enableable support for IPv6.
cuftpd also supports the EPSV and EPRT commands.

--- Custom site commands ---

If you want to add custom site commands, then see the /ftpd/commands section in data/cuftpd.xml.
You can add custom site commands there that will invoke external scripts for you.
NOTE: Choose the names of the commands with care, as they will overwrite any original site commands with the same name.

The processes are sent the following parameters in the following order:

  $1 = username
  $2 = primary group
  $3 = tagline
  $4 = current section name
  $5 = current path (absolute in the file system)
  $6 = command parameters
 
where &#39;command parameters&#39; indicate any parameters that were sent to the command itself via the ftp.
Note that these will parameters will show up as one variable. &#39;command parameters&#39; will also include the name of the site command.

Thus, if you are invoking some external script called &quot;/cuftpd/bin/pre.sh&quot;, then the command line will look as follows:

# /cuftpd/bin/pre.sh captain some_group &quot;I have no tagline&quot; mp3 &quot;/cuftpd/site/mp3/some/dir&quot; &quot;site pre blah kek lol&quot;

To deliver help for these commands to your users, put a file named &quot;command.txt&quot; in data/help/, where &#39;command&#39; is the
name of the command.

UPDATE: You can also use java classes as custom site commands with cuftpd.
Just create a class that extends cu.ftpd.commands.site.actions.Action. In this class you can override the execute(..)
method. To use java classes as custom site commands, you have to set the &lt;type&gt; tag to &quot;java&quot;.
For more information, just look at any of the classes in cu.ftpd.site.actions.*, and it should become clear what to do.
NOTE: when using type=java, the add_response_code parameter will do nothing. Your classes have to provide a response
code by themselves

--- 7bit templates for site output ---

If your output looks weird, look in the FAQ for information on how to change your display templates.

--- CRITICAL errors ---

When you get errors tagged with CRITICAL in your error log, it&#39;s a sure sign that something is VERY wrong. Therefore,
I suggest checking it every now and then, or doing a selective &#39;tail&#39; of it, so you can see when errors happen.
Some critical errors are recoverable, and some are not. If they are recoverable, that means that the system will keep
running, but the problem needs to be looked at right away.

--- Compiling cuftpd ---

The normal distribution comes with jar-files that you can use. If you want to recompile the source code, the easiest
way is to download maven from http://maven.apache.org/ and use that in conjunction with the &#39;pom.xml&#39; file included
in the cuftpd distribution, and do &quot;mvn clean install&quot;.

--- Handling events ---

cuftpd comes with an event handling system. For some selected events (listed below), it will trigger event handlers
both &quot;before&quot; and &quot;after&quot; the event in question. These event handlers can be either java classes or shell scripts.
Handlers for &quot;before&quot; events have the ability to write to the control connection. If you want to send a message to
the user, this is the only way.
NOTE: IF you want to write to the control connection you MUST include ftp response codes. It is crucial that these codes
correspond to the respond code of the original command, if the command is to continue. I.e. if you want to echo something
before an MKD, then you HAVE to respond with 257 if it is good.
Also note that all lines in a multiple line respond have a &quot;-&quot; just after the 3-digit number. The last line does not have
this, indicating the end of the message. This information is available in RFC 959 (google it).
If you want to halt execution of the command, you do this by returning false in the case of the java handlers, and
anything other than 0 for the shell handlers.
Halting execution means that any other event handlers will also not be run. You can have multiple event handlers for
each event. Some events have a set of pre-defined event handlers that are initialized in the code. These are automatically
run before any user-defined event handlers. These pre-defined handlers include things like dupecheck and dirlog.

Java classes:
All java class event handlers must implement the AfterEventHandler and/or BeforeEventHandler as appropriate.
These interfaces reside in src/cu/ftpd/events/. These interface have javadoc comments about what implementing
them means, and how they work. Each class will only be instantiated once, so if you have multiple event handlers
that use the same class, they will all be invoked on the same object.
Upon triggering an event, these event handlers will receive the event in question. Different events contain different
types of data. What this data is can be seen where the events are issued, for instance in the Connection, CommadnSTOR
and CommandRETR classes. The events currently in use are:

    Event name                  Event id
    ------------------------------------
    CREATE_DIRECTORY            0
    REMOVE_DIRECTORY            1
    DELETE_FILE                 2
    RENAME_FROM                 3
    RENAME_TO                   4
    SITE_COMMAND                100
    UPLOAD                      1000
    DOWNLOAD                    1001

Shell scripts/applications:
These can be any shell scripts or applications that are executable on the host system.
These scripts receive a different set of parameters depending on what event is triggered.
They also receive a string indicating &quot;before&quot; or &quot;after&quot; (&quot;time&quot; below), as well as an interger event type id.
This event type id is the one described in the table above.

    All events share these parameters:
    $1 = time
    $2 = event type
    $3 = username
    $4 = group
    $5 = tagline
    $6 = pwd (absolute path)
    $7 = pwd (path relative to the ftp root)

    After that the events send these commands, respectively

    RENAME_TO, RENAME_FROM:
    $8 = source (absolute path)
    $9 = source (path relative to the ftp root)
    $10 = target (absolute path)
    $11 = target (path relative to the ftp root)
    $12 = directory (boolean)
    $13 = file size (long)

    
    UPLOAD, DOWNLOAD:
    $8 = state (0 = PENDING, 1 = COMPLETE)
    $9 = bytes transferred
    $10 = transfer time
    $11 = transfer type
    $12 = remote hostname

    DELETE_FILE:
    $8 = file (absolute path)
    $9 = file (path relative to the ftp root)
    $10 = file size

    SITE_COMMAND:
    $8 = site command parameters (e.g. &quot;WIPE /some/dir/&quot;)

    All others contain:
    $8 = file (absolute path)
    $9 = file (path relative to the ftp root)
</pre>
            </div>
          
        </div>
    </div>

    <div class="sidebar">
      
      
        
        
      
      
      
        
      

      <section id="repo-activity" class="activity">
        <h2>
          Recent activity
          
          <a href="/jevring/cuftpd/rss"
            title="Subscribe to activity updates for this repository"
            class="subscribe">
            <span class="aui-icon aui-icon-small aui-iconfont-rss rss-icon"></span>
          </a>
        </h2>
        
      </section>
    </div>
  </div>

  


  

        
        
        
      </div>
    </div>
  </div>

      </div>
    </div>
  
  <div id="adg3-flag-root"></div>
</div>

<div id="adg3-dialog"></div>


  

<div data-module="components/mentions/index">
  
    
    
  
  
    
    
  
  
    
    
  
</div>
<div data-module="components/typeahead/emoji/index">
  
    
    
  
</div>

<div data-module="components/repo-typeahead/index">
  
    
    
  
</div>

    
    
  

    
    
  

    
    
  

    
    
  


  <aui-inline-dialog
    id="help-menu-dialog"
    data-aui-alignment="bottom right"

    
    data-aui-alignment-static="true"
    data-module="header/help-menu"
    responds-to="toggle"
    aria-hidden="true">

  <div id="help-menu-section">
    <h1 class="help-menu-heading">Help</h1>

    <form id="help-menu-search-form" class="aui" target="_blank" method="get"
        action="https://support.atlassian.com/customer/search">
      <span id="help-menu-search-icon" class="aui-icon aui-icon-large aui-iconfont-search"></span>
      <input id="help-menu-search-form-input" name="q" class="text" type="text" placeholder="Ask a question">
    </form>

    <ul id="help-menu-links">
      <li>
        <a class="support-ga" data-support-gaq-page="DocumentationHome"
            href="https://confluence.atlassian.com/x/bgozDQ" target="_blank">
          Online help
        </a>
      </li>
      <li>
        <a class="support-ga" data-support-gaq-page="GitTutorials"
            href="https://www.atlassian.com/git?utm_source=bitbucket&amp;utm_medium=link&amp;utm_campaign=help_dropdown&amp;utm_content=learn_git"
            target="_blank">
          Learn Git
        </a>
      </li>
      <li>
        <a id="keyboard-shortcuts-link"
           href="#">Keyboard shortcuts</a>
      </li>
      <li>
        <a class="support-ga" data-support-gaq-page="DocumentationTutorials"
            href="https://confluence.atlassian.com/x/Q4sFLQ" target="_blank">
          Bitbucket tutorials
        </a>
      </li>
      <li>
        <a class="support-ga" data-support-gaq-page="SiteStatus"
            href="https://status.bitbucket.org/" target="_blank">
          Site status
        </a>
      </li>
      <li>
        <a class="support-ga" data-support-gaq-page="Home"
            href="https://support.atlassian.com/bitbucket-cloud/" target="_blank">
          Support
        </a>
      </li>
    </ul>
  </div>
</aui-inline-dialog>
  





  

  <div class="_mustache-templates">
    
      <script id="forks-overview-template" type="text/html">
        

<div class="tabbed-filter-widget repo-stats-dialog forks" id="forks-dialog">
    <div class="tabbed-filter">
      <input placeholder="Filter forks" class="filter-box" autosave="fork-dropdown-503786" type="text">
    </div>
    <div class="tab-pane active-pane forks" id="fork-list">
    <ol class="filter-list[[^forks]] empty[[/forks]]">
      <li class="empty-msg">No matching forks</li>
      [[#forks]]
        <li class="comprev filter-item">
          <a href="/[[owner.username]]/[[slug]]" 
             class="filter-item-link" title="[[owner.username]]/[[slug]]">[[owner.username]]/[[slug]]</a>
          <a rel="nofollow" class="compare"
             href="/jevring/cuftpd/branches/compare/[[owner.username]]/[[slug]].."
             title="Show changes between [[owner.username]]/[[slug]] and this repository.">Compare</a>
        </li>
      [[/forks]]
    </ol>
  </div>
</div>

      </script>
    
      <script id="watchers-overview-template" type="text/html">
        

<div class="followers-dialog repo-stats-dialog" id="followers-dialog">
  <div id="followers-list" class="followers-list">
    <ol[[^followers]] class="empty"[[/followers]]>
      <li class="empty-msg">No watchers yet</li>
      [[#followers]]
        <li>
          <a href="/[[username]]/" title="[[display_name]]">
            <span class="aui-avatar aui-avatar-medium">
              <span class="aui-avatar-inner">
                <img src="[[avatar]]">
              </span>
            </span>
          </a>
        </li>
      [[/followers]]
    </ol>
  </div>
</div>

      </script>
    
      <script id="mention-result" type="text/html">
        
<span class="mention-result">
  <span class="aui-avatar aui-avatar-small mention-result--avatar">
    <span class="aui-avatar-inner">
      <img src="[[avatar_url]]">
    </span>
  </span>
  [[#display_name]]
    <span class="display-name mention-result--display-name">[[&display_name]]</span> <small class="username mention-result--username">[[&username]]</small>
  [[/display_name]]
  [[^display_name]]
    <span class="username mention-result--username">[[&username]]</span>
  [[/display_name]]
  [[#is_teammate]][[^is_team]]
    <span class="aui-lozenge aui-lozenge-complete aui-lozenge-subtle mention-result--lozenge">teammate</span>
  [[/is_team]][[/is_teammate]]
</span>
      </script>
    
      <script id="mention-call-to-action" type="text/html">
        
[[^query]]
<li class="bb-typeahead-item">Begin typing to search for a user</li>
[[/query]]
[[#query]]
<li class="bb-typeahead-item">Continue typing to search for a user</li>
[[/query]]

      </script>
    
      <script id="mention-no-results" type="text/html">
        
[[^searching]]
<li class="bb-typeahead-item">Found no matching users for <em>[[query]]</em>.</li>
[[/searching]]
[[#searching]]
<li class="bb-typeahead-item bb-typeahead-searching">Searching for <em>[[query]]</em>.</li>
[[/searching]]

      </script>
    
      <script id="emoji-result" type="text/html">
        
<span class="emoji-result">
  <span class="emoji-result--avatar">
    <img class="emoji" src="[[src]]">
  </span>
  <span class="name emoji-result--name">[[&name]]</span>
</span>

      </script>
    
      <script id="repo-typeahead-result" type="text/html">
        <span class="aui-avatar aui-avatar-project aui-avatar-xsmall">
  <span class="aui-avatar-inner">
    <img src="[[avatar]]">
  </span>
</span>
<span class="owner">[[&owner]]</span>/<span class="slug">[[&slug]]</span>

      </script>
    
      <script id="share-form-template" type="text/html">
        

<div class="error aui-message hidden">
  <span class="aui-icon icon-error"></span>
  <div class="message"></div>
</div>
<form class="aui">
  <table class="widget bb-list aui">
    <thead>
    <tr class="assistive">
      <th class="user">User</th>
      <th class="role">Role</th>
      <th class="actions">Actions</th>
    </tr>
    </thead>
    <tbody>
      <tr class="form">
        <td colspan="2">
          <input type="text" class="text bb-user-typeahead user-or-email"
                 placeholder="Username or email address"
                 autocomplete="off"
                 data-bb-typeahead-focus="false"
                 [[#disabled]]disabled[[/disabled]]>
        </td>
        <td class="actions">
          <button type="submit" class="aui-button aui-button-light" disabled>Add</button>
        </td>
      </tr>
    </tbody>
  </table>
</form>

      </script>
    
      <script id="share-detail-template" type="text/html">
        

[[#username]]
<td class="user
    [[#hasCustomGroups]]custom-groups[[/hasCustomGroups]]"
    [[#error]]data-error="[[error]]"[[/error]]>
  <div title="[[displayName]]">
    <a href="/[[username]]/" class="user">
      <span class="aui-avatar aui-avatar-xsmall">
        <span class="aui-avatar-inner">
          <img src="[[avatar]]">
        </span>
      </span>
      <span>[[displayName]]</span>
    </a>
  </div>
</td>
[[/username]]
[[^username]]
<td class="email
    [[#hasCustomGroups]]custom-groups[[/hasCustomGroups]]"
    [[#error]]data-error="[[error]]"[[/error]]>
  <div title="[[email]]">
    <span class="aui-icon aui-icon-small aui-iconfont-email"></span>
    [[email]]
  </div>
</td>
[[/username]]
<td class="role
    [[#hasCustomGroups]]custom-groups[[/hasCustomGroups]]">
  <div>
    [[#group]]
      [[#hasCustomGroups]]
        <select class="group [[#noGroupChoices]]hidden[[/noGroupChoices]]">
          [[#groups]]
            <option value="[[slug]]"
                [[#isSelected]]selected[[/isSelected]]>
              [[name]]
            </option>
          [[/groups]]
        </select>
      [[/hasCustomGroups]]
      [[^hasCustomGroups]]
      <label>
        <input type="checkbox" class="admin"
            [[#isAdmin]]checked[[/isAdmin]]>
        Administrator
      </label>
      [[/hasCustomGroups]]
    [[/group]]
    [[^group]]
      <ul>
        <li class="permission aui-lozenge aui-lozenge-complete
            [[^read]]aui-lozenge-subtle[[/read]]"
            data-permission="read">
          read
        </li>
        <li class="permission aui-lozenge aui-lozenge-complete
            [[^write]]aui-lozenge-subtle[[/write]]"
            data-permission="write">
          write
        </li>
        <li class="permission aui-lozenge aui-lozenge-complete
            [[^admin]]aui-lozenge-subtle[[/admin]]"
            data-permission="admin">
          admin
        </li>
      </ul>
    [[/group]]
  </div>
</td>
<td class="actions
    [[#hasCustomGroups]]custom-groups[[/hasCustomGroups]]">
  <div>
    <a href="#" class="delete">
      <span class="aui-icon aui-icon-small aui-iconfont-remove">Delete</span>
    </a>
  </div>
</td>

      </script>
    
      <script id="share-team-template" type="text/html">
        

<div class="clearfix">
  <span class="team-avatar-container">
    <span class="aui-avatar aui-avatar-medium">
      <span class="aui-avatar-inner">
        <img src="[[avatar]]">
      </span>
    </span>
  </span>
  <span class="team-name-container">
    [[display_name]]
  </span>
</div>
<p class="helptext">
  
    Existing users are granted access to this team immediately.
    New users will be sent an invitation.
  
</p>
<div class="share-form"></div>

      </script>
    
      <script id="scope-list-template" type="text/html">
        <ul class="scope-list">
  [[#scopes]]
    <li class="scope-list--item">
      <span class="scope-list--icon aui-icon aui-icon-small [[icon]]"></span>
      <span class="scope-list--description">[[description]]</span>
    </li>
  [[/scopes]]
</ul>

      </script>
    
  </div>




  
  


<script nonce="">
  window.__initial_state__ = {"section": {"repository": {"connectActions": [], "cloneProtocol": "https", "currentRepository": {"scm": "hg", "website": "", "name": "cuftpd", "language": "java", "description": "cuftpd is an ftp-server written in Java.", "links": {"clone": [{"href": "https://bitbucket.org/jevring/cuftpd", "name": "https"}, {"href": "ssh://hg@bitbucket.org/jevring/cuftpd", "name": "ssh"}], "self": {"href": "https://bitbucket.org/!api/2.0/repositories/jevring/cuftpd"}, "html": {"href": "https://bitbucket.org/jevring/cuftpd"}, "avatar": {"href": "https://bytebucket.org/ravatar/%7B0264036a-a223-4832-bcee-1ca2f5a18307%7D?ts=java"}}, "mainbranch": {"name": "default"}, "full_name": "jevring/cuftpd", "owner": {"username": "jevring", "website": null, "display_name": "jevring", "account_id": "557058:bcace525-5f25-4ff1-b7bc-d61a6d4fc31d", "links": {"self": {"href": "https://bitbucket.org/!api/2.0/users/jevring"}, "html": {"href": "https://bitbucket.org/jevring/"}, "avatar": {"href": "https://bitbucket.org/account/jevring/avatar/"}}, "created_on": "2011-11-24T16:42:35.266418+00:00", "is_staff": false, "location": null, "type": "user", "uuid": "{1425f39d-0876-44f3-a3c3-010056e77a20}"}, "type": "repository", "slug": "cuftpd", "is_private": false, "uuid": "{0264036a-a223-4832-bcee-1ca2f5a18307}"}, "menuItems": [{"analytics_label": "repository.overview", "is_client_link": false, "icon_class": "icon-overview", "badge_label": null, "weight": 100, "url": "/jevring/cuftpd/overview", "tab_name": "overview", "can_display": true, "label": "Overview", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-overview-link", "icon": "icon-overview"}, {"analytics_label": "repository.source", "is_client_link": false, "icon_class": "icon-source", "badge_label": null, "weight": 200, "url": "/jevring/cuftpd/src", "tab_name": "source", "can_display": true, "label": "Source", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": ["/diff", "/history-node"], "target": "_self", "id": "repo-source-link", "icon": "icon-source"}, {"analytics_label": "repository.commits", "is_client_link": false, "icon_class": "icon-commits", "badge_label": null, "weight": 300, "url": "/jevring/cuftpd/commits/", "tab_name": "commits", "can_display": true, "label": "Commits", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-commits-link", "icon": "icon-commits"}, {"analytics_label": "repository.branches", "is_client_link": false, "icon_class": "icon-branches", "badge_label": null, "weight": 400, "url": "/jevring/cuftpd/branches/", "tab_name": "branches", "can_display": true, "label": "Branches", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-branches-link", "icon": "icon-branches"}, {"analytics_label": "repository.pullrequests", "is_client_link": false, "icon_class": "icon-pull-requests", "badge_label": null, "weight": 500, "url": "/jevring/cuftpd/pull-requests/", "tab_name": "pullrequests", "can_display": true, "label": "Pull requests", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-pullrequests-link", "icon": "icon-pull-requests"}, {"analytics_label": "user.addon", "is_client_link": false, "icon_class": "aui-iconfont-unfocus", "badge_label": null, "weight": 550, "url": "/jevring/cuftpd/addon/pipelines/home", "tab_name": "repopage-6yqAnb-add-on-link", "can_display": true, "label": "Pipelines", "icon_url": "https://bitbucket-connect-icons.s3.amazonaws.com/add-on/icons/62acf41d-386f-49fd-b823-4f86445390e2.svg", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "type": "connect_menu_item", "id": "repopage-6yqAnb-add-on-link", "target": "_self"}, {"analytics_label": "issues", "is_client_link": false, "icon_class": "icon-issues", "badge_label": "18 active issues", "weight": 600, "url": "/jevring/cuftpd/issues?status=new&status=open", "tab_name": "issues", "can_display": true, "label": "Issues", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-issues-link", "icon": "icon-issues"}, {"analytics_label": "repository.wiki", "is_client_link": false, "icon_class": "icon-wiki", "badge_label": null, "weight": 700, "url": "/jevring/cuftpd/wiki/", "tab_name": "wiki", "can_display": true, "label": "Wiki", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-wiki-link", "icon": "icon-wiki"}, {"analytics_label": "repository.downloads", "is_client_link": false, "icon_class": "icon-downloads", "badge_label": null, "weight": 800, "url": "/jevring/cuftpd/downloads/", "tab_name": "downloads", "can_display": true, "label": "Downloads", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-downloads-link", "icon": "icon-downloads"}], "bitbucketActions": [{"analytics_label": "repository.clone", "is_client_link": false, "icon_class": "icon-clone", "badge_label": null, "weight": 100, "url": "#clone", "tab_name": "clone", "can_display": true, "label": "<strong>Clone<\/strong> this repository", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-clone-button", "icon": "icon-clone"}, {"analytics_label": "repository.compare", "is_client_link": false, "icon_class": "aui-icon-small aui-iconfont-devtools-compare", "badge_label": null, "weight": 400, "url": "/jevring/cuftpd/branches/compare", "tab_name": "compare", "can_display": true, "label": "<strong>Compare<\/strong> branches or tags", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-compare-link", "icon": "aui-icon-small aui-iconfont-devtools-compare"}, {"analytics_label": "repository.fork", "is_client_link": false, "icon_class": "icon-fork", "badge_label": null, "weight": 500, "url": "/jevring/cuftpd/fork", "tab_name": "fork", "can_display": true, "label": "<strong>Fork<\/strong> this repository", "type": "menu_item", "anchor": true, "analytics_payload": {}, "matching_url_prefixes": [], "target": "_self", "id": "repo-fork-link", "icon": "icon-fork"}], "activeMenuItem": "overview"}}, "global": {"needs_marketing_consent": false, "features": {"exp-share-to-invite-variation": false, "site-message-flags": true, "merge-api-shorter-lock-timeout": true, "show-billing-errors": true, "bitbucket-chats-integration": true, "source-browser-file-filter": true, "cache-ref-adverts": true, "gdpr-marketing-consent": true, "mobile-nav": true, "deployments": true, "fe_word_diff": true, "use-moneybucket": true, "default-merge-strategy": true, "analytics_push_introspection": true, "nav-add-file": false, "clone-in-xcode": true, "app-passwords": true, "connect-v5": true, "trello-boards": true, "src-lastmod-for-dirs": true, "connect-proxy-outbound": true, "search-syntax-highlighting": true, "lfs_post_beta": true, "allow-pullrequest-live-reviewers": true}, "locale": "en", "geoip_country": null, "targetFeatures": {"site-message-flags": true, "new-code-review-experiment": false, "merge-api-shorter-lock-timeout": true, "show-billing-errors": true, "show-guidance-message": true, "search-satisfaction": true, "bitbucket-chats-integration": true, "source-browser-file-filter": true, "cache-ref-adverts": true, "prism-syntax-highlighting": true, "mobile-nav": true, "deployments": true, "fe_word_diff": true, "clonebundles": true, "use-moneybucket": true, "default-merge-strategy": true, "pride-logo": false, "analytics_push_introspection": true, "diff-api-renames": false, "exp-new-user-survey": true, "clone-in-xcode": true, "gdpr-marketing-consent": true, "connect-v5": true, "trello-boards": true, "atlassian-editor": true, "src-lastmod-for-dirs": true, "new-source-browser": true, "connect-proxy-outbound": true, "evolution": false, "search-syntax-highlighting": true, "app-passwords": true, "lfs_post_beta": true, "allow-pullrequest-live-reviewers": true}, "isFocusedTask": false, "browser_monitoring": true, "targetUser": {"username": "jevring", "website": null, "display_name": "jevring", "account_id": "557058:bcace525-5f25-4ff1-b7bc-d61a6d4fc31d", "links": {"self": {"href": "https://bitbucket.org/!api/2.0/users/jevring"}, "html": {"href": "https://bitbucket.org/jevring/"}, "avatar": {"href": "https://bitbucket.org/account/jevring/avatar/"}}, "created_on": "2011-11-24T16:42:35.266418+00:00", "is_staff": false, "location": null, "type": "user", "uuid": "{1425f39d-0876-44f3-a3c3-010056e77a20}"}, "is_mobile_user_agent": false, "flags": [], "site_message": "", "isNavigationOpen": true, "path": "/jevring/cuftpd", "focusedTaskBackButtonUrl": null}};
  window.__settings__ = {"MARKETPLACE_TERMS_OF_USE_URL": null, "JIRA_ISSUE_COLLECTORS": {"source-browser": {"url": "https://bitbucketfeedback.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/-tqnsjm/b/20/a44af77267a987a660377e5c46e0fb64/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-US&collectorId=c19c2ff6", "id": "c19c2ff6"}, "code-review": {"url": "https://bitbucketfeedback.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/-4bqv2z/b/20/a44af77267a987a660377e5c46e0fb64/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-US&collectorId=bb066400", "id": "bb066400"}}, "CANON_URL": "https://bitbucket.org", "CONSENT_HUB_FRONTEND_BASE_URL": "https://preferences.atlassian.com", "API_CANON_URL": "https://api.bitbucket.org", "SOCIAL_AUTH_ATLASSIANID_LOGOUT_URL": "https://id.atlassian.com/logout", "EMOJI_STANDARD_BASE_URL": "https://pf-emoji-service.prod.public.atl-paas.net/emoji/"};
  window.__webpack_nonce__ = '';
</script>

<script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/jsi18n/en/djangojs.js" nonce=""></script>

  <script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/dist/webpack/locales/en.js" nonce=""></script>

<script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/dist/webpack/vendor.js" nonce=""></script>
<script src="https://d301sr5gafysq2.cloudfront.net/13e9ac7a8b26/dist/webpack/app.js" nonce=""></script>


<script async src="https://www.google-analytics.com/analytics.js" nonce=""></script>

<script nonce="" type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":0,"licenseKey":"a2cef8c3d3","agent":"","transactionName":"Z11RZxdWW0cEVkYLDV4XdUYLVEFdClsdAAtEWkZQDlJBGgRFQhFMQl1DXFcZQ10AQkFYDlFWV1oLUA==","applicationID":"1841284","errorBeacon":"bam.nr-data.net","applicationTime":218}</script>
</body>
</html>